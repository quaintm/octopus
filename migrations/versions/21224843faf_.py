"""empty message

Revision ID: 21224843faf
Revises: None
Create Date: 2014-12-03 23:35:15.602283

"""

# revision identifiers, used by Alembic.
revision = '21224843faf'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
  ### commands auto generated by Alembic - please adjust! ###
  op.create_table('regions',
                  sa.Column('id', sa.Integer(), nullable=False),
                  sa.Column('code', sa.String(length=4), nullable=False),
                  sa.Column('name', sa.String(length=80), nullable=False),
                  sa.Column('address', sa.String(length=120), nullable=False),
                  sa.Column('city', sa.String(length=80), nullable=False),
                  sa.Column('state', sa.String(length=2), nullable=False),
                  sa.Column('zip', sa.String(length=15), nullable=False),
                  sa.Column('phone', sa.String(length=15), nullable=False),
                  sa.PrimaryKeyConstraint('id'),
                  sa.UniqueConstraint('code'),
                  sa.UniqueConstraint('name'),
                  sa.UniqueConstraint('phone'),
                  sa.UniqueConstraint('zip'),
                  sqlite_autoincrement=True
  )
  op.create_table('users',
                  sa.Column('id', sa.Integer(), nullable=False),
                  sa.Column('username', sa.String(length=80), nullable=False),
                  sa.Column('email', sa.String(length=80), nullable=False),
                  sa.Column('password', sa.String(length=128), nullable=True),
                  sa.Column('created_at', sa.DateTime(), nullable=False),
                  sa.Column('first_name', sa.String(length=30), nullable=True),
                  sa.Column('last_name', sa.String(length=30), nullable=True),
                  sa.Column('active', sa.Boolean(), nullable=True),
                  sa.Column('is_admin', sa.Boolean(), nullable=True),
                  sa.PrimaryKeyConstraint('id'),
                  sa.UniqueConstraint('email'),
                  sqlite_autoincrement=True
  )
  op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
  op.create_table('case_types',
                  sa.Column('id', sa.Integer(), nullable=False),
                  sa.Column('code', sa.String(length=15), nullable=False),
                  sa.Column('description', sa.String(length=80),
                            nullable=False),
                  sa.PrimaryKeyConstraint('id'),
                  sqlite_autoincrement=True
  )
  op.create_index(op.f('ix_case_types_code'), 'case_types', ['code'],
                  unique=True)
  op.create_index(op.f('ix_case_types_description'), 'case_types',
                  ['description'], unique=False)
  op.create_table('tags',
                  sa.Column('id', sa.Integer(), nullable=False),
                  sa.Column('kind', sa.Text(), nullable=False),
                  sa.Column('tag', sa.Text(), nullable=False),
                  sa.PrimaryKeyConstraint('id'),
                  sqlite_autoincrement=True
  )
  op.create_index(op.f('ix_tags_kind'), 'tags', ['kind'], unique=False)
  op.create_index(op.f('ix_tags_tag'), 'tags', ['tag'], unique=False)
  op.create_table('roles',
                  sa.Column('id', sa.Integer(), nullable=False),
                  sa.Column('name', sa.String(length=80), nullable=False),
                  sa.Column('user_id', sa.Integer(), nullable=True),
                  sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                  sa.PrimaryKeyConstraint('id'),
                  sa.UniqueConstraint('name'),
                  sqlite_autoincrement=True
  )
  op.create_table('cases',
                  sa.Column('id', sa.Integer(), nullable=False),
                  sa.Column('crd_number', sa.Integer(), nullable=False),
                  sa.Column('case_name', sa.Text(), nullable=True),
                  sa.Column('case_desc', sa.Text(), nullable=True),
                  sa.Column('start_date', sa.Date(), nullable=False),
                  sa.Column('end_date', sa.Date(), nullable=True),
                  sa.Column('case_type_id', sa.Integer(), nullable=False),
                  sa.Column('region_id', sa.Integer(), nullable=False),
                  sa.Column('mars_risk_score', sa.Integer(), nullable=True),
                  sa.Column('qau_risk_score', sa.Integer(), nullable=True),
                  sa.Column('examiner_risk_score', sa.Integer(), nullable=True),
                  sa.ForeignKeyConstraint(['case_type_id'],
                                          ['case_types.id'], ),
                  sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
                  sa.PrimaryKeyConstraint('id'),
                  sqlite_autoincrement=True
  )
  op.create_index(op.f('ix_cases_case_name'), 'cases', ['case_name'],
                  unique=False)
  op.create_index(op.f('ix_cases_crd_number'), 'cases', ['crd_number'],
                  unique=False)
  op.create_index(op.f('ix_cases_end_date'), 'cases', ['end_date'],
                  unique=False)
  op.create_index(op.f('ix_cases_start_date'), 'cases', ['start_date'],
                  unique=False)
  op.create_table('case_tag_map',
                  sa.Column('tag_id', sa.Integer(), nullable=True),
                  sa.Column('case_id', sa.Integer(), nullable=True),
                  sa.ForeignKeyConstraint(['case_id'], ['cases.id'], ),
                  sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], )
  )
  op.create_index(op.f('ix_case_tag_map_case_id'), 'case_tag_map', ['case_id'],
                  unique=False)
  op.create_index(op.f('ix_case_tag_map_tag_id'), 'case_tag_map', ['tag_id'],
                  unique=False)
  op.create_table('case_staff_map',
                  sa.Column('user_id', sa.Integer(), nullable=True),
                  sa.Column('case_id', sa.Integer(), nullable=True),
                  sa.Column('primary', sa.Boolean(), nullable=True),
                  sa.Column('secondary', sa.Boolean(), nullable=True),
                  sa.ForeignKeyConstraint(['case_id'], ['cases.id'], ),
                  sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
  )
  op.create_index(op.f('ix_case_staff_map_case_id'), 'case_staff_map',
                  ['case_id'], unique=False)
  op.create_index(op.f('ix_case_staff_map_user_id'), 'case_staff_map',
                  ['user_id'], unique=False)
  ### end Alembic commands ###


def downgrade():
  ### commands auto generated by Alembic - please adjust! ###
  op.drop_index(op.f('ix_case_staff_map_user_id'), table_name='case_staff_map')
  op.drop_index(op.f('ix_case_staff_map_case_id'), table_name='case_staff_map')
  op.drop_table('case_staff_map')
  op.drop_index(op.f('ix_case_tag_map_tag_id'), table_name='case_tag_map')
  op.drop_index(op.f('ix_case_tag_map_case_id'), table_name='case_tag_map')
  op.drop_table('case_tag_map')
  op.drop_index(op.f('ix_cases_start_date'), table_name='cases')
  op.drop_index(op.f('ix_cases_end_date'), table_name='cases')
  op.drop_index(op.f('ix_cases_crd_number'), table_name='cases')
  op.drop_index(op.f('ix_cases_case_name'), table_name='cases')
  op.drop_table('cases')
  op.drop_table('roles')
  op.drop_index(op.f('ix_tags_tag'), table_name='tags')
  op.drop_index(op.f('ix_tags_kind'), table_name='tags')
  op.drop_table('tags')
  op.drop_index(op.f('ix_case_types_description'), table_name='case_types')
  op.drop_index(op.f('ix_case_types_code'), table_name='case_types')
  op.drop_table('case_types')
  op.drop_index(op.f('ix_users_username'), table_name='users')
  op.drop_table('users')
  op.drop_table('regions')
  ### end Alembic commands ###
